import{_ as s,o as a,c as n,O as o}from"./chunks/framework.80b66818.js";const l="/web-components-store-doc/assets/组件导出.814c316c.png",h=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"guide/quickstart.md"}'),e={name:"guide/quickstart.md"},p=o(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>本节将介绍如何在项目中使用 web-common-store</p><h2 id="物料库组件开发" tabindex="-1">物料库组件开发 <a class="header-anchor" href="#物料库组件开发" aria-label="Permalink to &quot;物料库组件开发&quot;">​</a></h2><blockquote><p>介绍如何从零开发一个物料库组件</p></blockquote><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>所有组件必须包含 <code>name</code> 属性，否则会导致组件挂载报错</p></div><h3 id="开发一个业务组件" tabindex="-1">开发一个业务组件 <a class="header-anchor" href="#开发一个业务组件" aria-label="Permalink to &quot;开发一个业务组件&quot;">​</a></h3><ol><li>创建一个业务组件目录</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">组件名</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>组件名推荐使用大驼峰命名，如 <code>npm run create CardList</code>，该命令会在 <code>packages/components/</code> 下生成 <code>CardList</code> 文件夹，内部结构如下</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">┬</span><span style="color:#89DDFF;">---------</span><span style="color:#BABED8;"> CardInfo</span></span>
<span class="line"><span style="color:#BABED8;"> ├</span><span style="color:#89DDFF;">--</span><span style="color:#BABED8;">┬</span><span style="color:#89DDFF;">------</span><span style="color:#BABED8;"> src</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">  ├</span><span style="color:#89DDFF;">------</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js 			</span><span style="color:#676E95;font-style:italic;">// 组件逻辑 </span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">  ├</span><span style="color:#89DDFF;">------</span><span style="color:#BABED8;"> CardInfo</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js			</span><span style="color:#676E95;font-style:italic;">// pc 端页面</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">  └</span><span style="color:#89DDFF;">------</span><span style="color:#BABED8;"> CardInfo</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mobile</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js  </span><span style="color:#676E95;font-style:italic;">// 移动端页面</span></span>
<span class="line"><span style="color:#BABED8;"> ├</span><span style="color:#89DDFF;">---------</span><span style="color:#BABED8;"> index</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js 			</span><span style="color:#676E95;font-style:italic;">// 组件导出</span></span>
<span class="line"><span style="color:#BABED8;"> └</span><span style="color:#89DDFF;">---------</span><span style="color:#BABED8;"> package</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">json</span></span>
<span class="line"></span></code></pre></div><h4 id="_2-物料库导出业务组件" tabindex="-1">2. 物料库导出业务组件 <a class="header-anchor" href="#_2-物料库导出业务组件" aria-label="Permalink to &quot;2. 物料库导出业务组件&quot;">​</a></h4><p><code>packages/web-components-store</code> 为物料库的总出口，组件开发完成后，需要在该出口中集中导出，需要修改<code>packages/web-components-store/index.js</code> 中以下部分</p><p><img src="`+l+`" alt="组件导出"></p><ol><li>导入组件</li><li>添加到对应组件列表</li><li>别名导出（别名保持与组件中的 name 属性一致）</li></ol><h4 id="_3-运行物料库预览应用" tabindex="-1">3. 运行物料库预览应用 <a class="header-anchor" href="#_3-运行物料库预览应用" aria-label="Permalink to &quot;3. 运行物料库预览应用&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">play</span></span>
<span class="line"></span></code></pre></div><p>该命令会启动 <code>/app</code> 下的预览应用，物料库所有组件均以全局注册，在 <code>/app/src/</code> 下可以直接使用新增的组件，组件名称为组件中的 name 值，默认为 <code>Biz\${组件名}</code> 与 <code>BizMobile\${组件名}</code> 。</p><h4 id="_4-组件开发" tabindex="-1">4. 组件开发 <a class="header-anchor" href="#_4-组件开发" aria-label="Permalink to &quot;4. 组件开发&quot;">​</a></h4><p>完成组件的逻辑、样式开发</p><p>若需要应用物料库中的公共组件，工具函数，使用以下方式</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 引入 utils 库中 flat 方法</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">flat</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@web-components-store/utils</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AnimationSlot</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@web-components-store/common</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h4 id="_5-组件使用文档" tabindex="-1">5. 组件使用文档 <a class="header-anchor" href="#_5-组件使用文档" aria-label="Permalink to &quot;5. 组件使用文档&quot;">​</a></h4><p>完成组件使用文档编写</p><h3 id="开发一个公共基础组件" tabindex="-1">开发一个公共基础组件 <a class="header-anchor" href="#开发一个公共基础组件" aria-label="Permalink to &quot;开发一个公共基础组件&quot;">​</a></h3><p>物料库中的业务组件可能通用一些基础组件，这些基础组件放置在 <code>/packages/common/src </code> 下，若需要新增一个基础组件，大概需要进行以下步骤</p><ol><li>在 <code>/packages/common/src</code> 下新增基础组件目录</li><li>在 <code>/packages/common/src/\${新增组件目录}</code> 下新增 <code>index.vue</code></li><li>在 <code>/packages/common/index.js</code> 中导入、导出该基础组件</li><li>开发基础组件</li></ol><p>由于公共基础组件暂时只考虑在物料库中的业务组件使用，不考虑导出给外部其他项目使用。</p>`,27),t=[p];function c(r,i,D,y,d,B){return a(),n("div",null,t)}const m=s(e,[["render",c]]);export{h as __pageData,m as default};
